//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClassLibrary
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class isoftTankEntities : DbContext
    {
        public isoftTankEntities()
            : base("name=isoftTankEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BC> BCs { get; set; }
        public virtual DbSet<BE_bac_bac> BE_bac_bac { get; set; }
        public virtual DbSet<BE_export> BE_export { get; set; }
        public virtual DbSet<BE_livraison> BE_livraison { get; set; }
        public virtual DbSet<BE_Soutage> BE_Soutage { get; set; }
        public virtual DbSet<BE_Transfert> BE_Transfert { get; set; }
        public virtual DbSet<Client> Clients { get; set; }
        public virtual DbSet<Commande_client> Commande_client { get; set; }
        public virtual DbSet<Commande_marketer> Commande_marketer { get; set; }
        public virtual DbSet<Compte_marketer> Compte_marketer { get; set; }
        public virtual DbSet<Compte_utilisateur> Compte_utilisateur { get; set; }
        public virtual DbSet<Depot> Depots { get; set; }
        public virtual DbSet<Dette> Dettes { get; set; }
        public virtual DbSet<FacturationClient> FacturationClients { get; set; }
        public virtual DbSet<FacturationMarketer> FacturationMarketers { get; set; }
        public virtual DbSet<Fournisseur> Fournisseurs { get; set; }
        public virtual DbSet<Historique> Historiques { get; set; }
        public virtual DbSet<JoinBE_SoutageToNavire> JoinBE_SoutageToNavire { get; set; }
        public virtual DbSet<JoinDetteToProduit> JoinDetteToProduits { get; set; }
        public virtual DbSet<JoinProduitToCommande_client> JoinProduitToCommande_client { get; set; }
        public virtual DbSet<JoinTaxeToFacturation> JoinTaxeToFacturations { get; set; }
        public virtual DbSet<Marketer> Marketers { get; set; }
        public virtual DbSet<Navire> Navires { get; set; }
        public virtual DbSet<Point_consommation> Point_consommation { get; set; }
        public virtual DbSet<Pompe> Pompes { get; set; }
        public virtual DbSet<Pompiste> Pompistes { get; set; }
        public virtual DbSet<Produit> Produits { get; set; }
        public virtual DbSet<Reception> Receptions { get; set; }
        public virtual DbSet<Reglement_dette> Reglement_dette { get; set; }
        public virtual DbSet<Station> Stations { get; set; }
        public virtual DbSet<Stock> Stocks { get; set; }
        public virtual DbSet<Tanker> Tankers { get; set; }
        public virtual DbSet<Taxe> Taxes { get; set; }
        public virtual DbSet<Tranche> Tranches { get; set; }
        public virtual DbSet<TrancheMarketer> TrancheMarketers { get; set; }
        public virtual DbSet<Transaction_effectuee> Transaction_effectuee { get; set; }
        public virtual DbSet<Transporteur> Transporteurs { get; set; }
        public virtual DbSet<Utilisateur> Utilisateurs { get; set; }
        public virtual DbSet<Vente_carburant> Vente_carburant { get; set; }
        public virtual DbSet<View_BC> View_BC { get; set; }
        public virtual DbSet<View_BE_bac_bac> View_BE_bac_bac { get; set; }
        public virtual DbSet<View_BE_export> View_BE_export { get; set; }
        public virtual DbSet<View_BE_livraison> View_BE_livraison { get; set; }
        public virtual DbSet<View_BE_soutage> View_BE_soutage { get; set; }
        public virtual DbSet<View_BE_transfert> View_BE_transfert { get; set; }
        public virtual DbSet<View_Client> View_Client { get; set; }
        public virtual DbSet<View_Commande_client> View_Commande_client { get; set; }
        public virtual DbSet<View_Commande_marketer> View_Commande_marketer { get; set; }
        public virtual DbSet<View_Compte_marketer> View_Compte_marketer { get; set; }
        public virtual DbSet<View_Compte_utilisateur> View_Compte_utilisateur { get; set; }
        public virtual DbSet<View_Depot> View_Depot { get; set; }
        public virtual DbSet<View_Dette> View_Dette { get; set; }
        public virtual DbSet<View_Facturation> View_Facturation { get; set; }
        public virtual DbSet<View_Fournisseur> View_Fournisseur { get; set; }
        public virtual DbSet<View_JoinBE_soutageTo> View_JoinBE_soutageTo { get; set; }
        public virtual DbSet<View_JoinBE_soutageToNavire> View_JoinBE_soutageToNavire { get; set; }
        public virtual DbSet<View_JoinDetteToProduit> View_JoinDetteToProduit { get; set; }
        public virtual DbSet<View_JoinProduitToCommande_client> View_JoinProduitToCommande_client { get; set; }
        public virtual DbSet<View_JoinTaxeToFacturation> View_JoinTaxeToFacturation { get; set; }
        public virtual DbSet<View_Marketer> View_Marketer { get; set; }
        public virtual DbSet<View_Navire> View_Navire { get; set; }
        public virtual DbSet<View_Point_consommation> View_Point_consommation { get; set; }
        public virtual DbSet<View_Pompe> View_Pompe { get; set; }
        public virtual DbSet<View_Pompiste> View_Pompiste { get; set; }
        public virtual DbSet<View_Produit> View_Produit { get; set; }
        public virtual DbSet<View_Reception> View_Reception { get; set; }
        public virtual DbSet<View_Reglement_dette> View_Reglement_dette { get; set; }
        public virtual DbSet<View_Stock> View_Stock { get; set; }
        public virtual DbSet<View_Tanker> View_Tanker { get; set; }
        public virtual DbSet<View_Taxe> View_Taxe { get; set; }
        public virtual DbSet<View_Tranche> View_Tranche { get; set; }
        public virtual DbSet<View_Transaction_effectuee> View_Transaction_effectuee { get; set; }
        public virtual DbSet<View_Transporteur> View_Transporteur { get; set; }
        public virtual DbSet<View_Utilisateur> View_Utilisateur { get; set; }
        public virtual DbSet<View_Vente_carburant> View_Vente_carburant { get; set; }
    
        public virtual int creerBC(Nullable<decimal> quantite, string codeDEPOT, string codeU)
        {
            var quantiteParameter = quantite.HasValue ?
                new ObjectParameter("quantite", quantite) :
                new ObjectParameter("quantite", typeof(decimal));
    
            var codeDEPOTParameter = codeDEPOT != null ?
                new ObjectParameter("codeDEPOT", codeDEPOT) :
                new ObjectParameter("codeDEPOT", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("creerBC", quantiteParameter, codeDEPOTParameter, codeUParameter);
        }
    
        public virtual int creerBE_bac_bac(string libelle, Nullable<decimal> quantite, string codeCOMMANDE_MARKET, string codeDEPOT, string codeU)
        {
            var libelleParameter = libelle != null ?
                new ObjectParameter("libelle", libelle) :
                new ObjectParameter("libelle", typeof(string));
    
            var quantiteParameter = quantite.HasValue ?
                new ObjectParameter("quantite", quantite) :
                new ObjectParameter("quantite", typeof(decimal));
    
            var codeCOMMANDE_MARKETParameter = codeCOMMANDE_MARKET != null ?
                new ObjectParameter("codeCOMMANDE_MARKET", codeCOMMANDE_MARKET) :
                new ObjectParameter("codeCOMMANDE_MARKET", typeof(string));
    
            var codeDEPOTParameter = codeDEPOT != null ?
                new ObjectParameter("codeDEPOT", codeDEPOT) :
                new ObjectParameter("codeDEPOT", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("creerBE_bac_bac", libelleParameter, quantiteParameter, codeCOMMANDE_MARKETParameter, codeDEPOTParameter, codeUParameter);
        }
    
        public virtual int creerBE_export(string adresse, string cni_chauffeur, Nullable<int> duree_validite, string immatriculation_camion, string nom_chauffeur, string num_decl_douane_im7, string pays_destination, Nullable<decimal> quantite, string ville_destination, string codeDEPOT, string codeCOMMANDE_CLIENT, string codeTRANSPORTEUR, string codeU)
        {
            var adresseParameter = adresse != null ?
                new ObjectParameter("adresse", adresse) :
                new ObjectParameter("adresse", typeof(string));
    
            var cni_chauffeurParameter = cni_chauffeur != null ?
                new ObjectParameter("cni_chauffeur", cni_chauffeur) :
                new ObjectParameter("cni_chauffeur", typeof(string));
    
            var duree_validiteParameter = duree_validite.HasValue ?
                new ObjectParameter("duree_validite", duree_validite) :
                new ObjectParameter("duree_validite", typeof(int));
    
            var immatriculation_camionParameter = immatriculation_camion != null ?
                new ObjectParameter("immatriculation_camion", immatriculation_camion) :
                new ObjectParameter("immatriculation_camion", typeof(string));
    
            var nom_chauffeurParameter = nom_chauffeur != null ?
                new ObjectParameter("nom_chauffeur", nom_chauffeur) :
                new ObjectParameter("nom_chauffeur", typeof(string));
    
            var num_decl_douane_im7Parameter = num_decl_douane_im7 != null ?
                new ObjectParameter("num_decl_douane_im7", num_decl_douane_im7) :
                new ObjectParameter("num_decl_douane_im7", typeof(string));
    
            var pays_destinationParameter = pays_destination != null ?
                new ObjectParameter("pays_destination", pays_destination) :
                new ObjectParameter("pays_destination", typeof(string));
    
            var quantiteParameter = quantite.HasValue ?
                new ObjectParameter("quantite", quantite) :
                new ObjectParameter("quantite", typeof(decimal));
    
            var ville_destinationParameter = ville_destination != null ?
                new ObjectParameter("ville_destination", ville_destination) :
                new ObjectParameter("ville_destination", typeof(string));
    
            var codeDEPOTParameter = codeDEPOT != null ?
                new ObjectParameter("codeDEPOT", codeDEPOT) :
                new ObjectParameter("codeDEPOT", typeof(string));
    
            var codeCOMMANDE_CLIENTParameter = codeCOMMANDE_CLIENT != null ?
                new ObjectParameter("codeCOMMANDE_CLIENT", codeCOMMANDE_CLIENT) :
                new ObjectParameter("codeCOMMANDE_CLIENT", typeof(string));
    
            var codeTRANSPORTEURParameter = codeTRANSPORTEUR != null ?
                new ObjectParameter("codeTRANSPORTEUR", codeTRANSPORTEUR) :
                new ObjectParameter("codeTRANSPORTEUR", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("creerBE_export", adresseParameter, cni_chauffeurParameter, duree_validiteParameter, immatriculation_camionParameter, nom_chauffeurParameter, num_decl_douane_im7Parameter, pays_destinationParameter, quantiteParameter, ville_destinationParameter, codeDEPOTParameter, codeCOMMANDE_CLIENTParameter, codeTRANSPORTEURParameter, codeUParameter);
        }
    
        public virtual int creerBE_livraison(string cni_chauffeur, Nullable<int> duree_validite, string immatriculation_camion, string nom_chauffeur, string codeCOMMANDE_CLIENT, string codeDEPOT, string codeTRANSPORTEUR, string codeU)
        {
            var cni_chauffeurParameter = cni_chauffeur != null ?
                new ObjectParameter("cni_chauffeur", cni_chauffeur) :
                new ObjectParameter("cni_chauffeur", typeof(string));
    
            var duree_validiteParameter = duree_validite.HasValue ?
                new ObjectParameter("duree_validite", duree_validite) :
                new ObjectParameter("duree_validite", typeof(int));
    
            var immatriculation_camionParameter = immatriculation_camion != null ?
                new ObjectParameter("immatriculation_camion", immatriculation_camion) :
                new ObjectParameter("immatriculation_camion", typeof(string));
    
            var nom_chauffeurParameter = nom_chauffeur != null ?
                new ObjectParameter("nom_chauffeur", nom_chauffeur) :
                new ObjectParameter("nom_chauffeur", typeof(string));
    
            var codeCOMMANDE_CLIENTParameter = codeCOMMANDE_CLIENT != null ?
                new ObjectParameter("codeCOMMANDE_CLIENT", codeCOMMANDE_CLIENT) :
                new ObjectParameter("codeCOMMANDE_CLIENT", typeof(string));
    
            var codeDEPOTParameter = codeDEPOT != null ?
                new ObjectParameter("codeDEPOT", codeDEPOT) :
                new ObjectParameter("codeDEPOT", typeof(string));
    
            var codeTRANSPORTEURParameter = codeTRANSPORTEUR != null ?
                new ObjectParameter("codeTRANSPORTEUR", codeTRANSPORTEUR) :
                new ObjectParameter("codeTRANSPORTEUR", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("creerBE_livraison", cni_chauffeurParameter, duree_validiteParameter, immatriculation_camionParameter, nom_chauffeurParameter, codeCOMMANDE_CLIENTParameter, codeDEPOTParameter, codeTRANSPORTEURParameter, codeUParameter);
        }
    
        public virtual int creerBE_soutage(Nullable<int> duree_validite, string immatriculation_camion, string nom_chauffeur, string nom_client, Nullable<decimal> quantite, string codeCOMMANDE_CLIENT, string codeDEPOT, string codeTRANSPORTEUR, string codeU)
        {
            var duree_validiteParameter = duree_validite.HasValue ?
                new ObjectParameter("duree_validite", duree_validite) :
                new ObjectParameter("duree_validite", typeof(int));
    
            var immatriculation_camionParameter = immatriculation_camion != null ?
                new ObjectParameter("immatriculation_camion", immatriculation_camion) :
                new ObjectParameter("immatriculation_camion", typeof(string));
    
            var nom_chauffeurParameter = nom_chauffeur != null ?
                new ObjectParameter("nom_chauffeur", nom_chauffeur) :
                new ObjectParameter("nom_chauffeur", typeof(string));
    
            var nom_clientParameter = nom_client != null ?
                new ObjectParameter("nom_client", nom_client) :
                new ObjectParameter("nom_client", typeof(string));
    
            var quantiteParameter = quantite.HasValue ?
                new ObjectParameter("quantite", quantite) :
                new ObjectParameter("quantite", typeof(decimal));
    
            var codeCOMMANDE_CLIENTParameter = codeCOMMANDE_CLIENT != null ?
                new ObjectParameter("codeCOMMANDE_CLIENT", codeCOMMANDE_CLIENT) :
                new ObjectParameter("codeCOMMANDE_CLIENT", typeof(string));
    
            var codeDEPOTParameter = codeDEPOT != null ?
                new ObjectParameter("codeDEPOT", codeDEPOT) :
                new ObjectParameter("codeDEPOT", typeof(string));
    
            var codeTRANSPORTEURParameter = codeTRANSPORTEUR != null ?
                new ObjectParameter("codeTRANSPORTEUR", codeTRANSPORTEUR) :
                new ObjectParameter("codeTRANSPORTEUR", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("creerBE_soutage", duree_validiteParameter, immatriculation_camionParameter, nom_chauffeurParameter, nom_clientParameter, quantiteParameter, codeCOMMANDE_CLIENTParameter, codeDEPOTParameter, codeTRANSPORTEURParameter, codeUParameter);
        }
    
        public virtual int creerBE_TRANSFERT(Nullable<int> duree_validite, string immatriculation_camion, string nom_chauffeur, Nullable<decimal> quantite, string codeMARKETER, string codeDEPOT, string codeU)
        {
            var duree_validiteParameter = duree_validite.HasValue ?
                new ObjectParameter("duree_validite", duree_validite) :
                new ObjectParameter("duree_validite", typeof(int));
    
            var immatriculation_camionParameter = immatriculation_camion != null ?
                new ObjectParameter("immatriculation_camion", immatriculation_camion) :
                new ObjectParameter("immatriculation_camion", typeof(string));
    
            var nom_chauffeurParameter = nom_chauffeur != null ?
                new ObjectParameter("nom_chauffeur", nom_chauffeur) :
                new ObjectParameter("nom_chauffeur", typeof(string));
    
            var quantiteParameter = quantite.HasValue ?
                new ObjectParameter("quantite", quantite) :
                new ObjectParameter("quantite", typeof(decimal));
    
            var codeMARKETERParameter = codeMARKETER != null ?
                new ObjectParameter("codeMARKETER", codeMARKETER) :
                new ObjectParameter("codeMARKETER", typeof(string));
    
            var codeDEPOTParameter = codeDEPOT != null ?
                new ObjectParameter("codeDEPOT", codeDEPOT) :
                new ObjectParameter("codeDEPOT", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("creerBE_TRANSFERT", duree_validiteParameter, immatriculation_camionParameter, nom_chauffeurParameter, quantiteParameter, codeMARKETERParameter, codeDEPOTParameter, codeUParameter);
        }
    
        public virtual int creerClient(string adresse, string email, string nom, string pays, string telephone, string ville, string codeU)
        {
            var adresseParameter = adresse != null ?
                new ObjectParameter("adresse", adresse) :
                new ObjectParameter("adresse", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var paysParameter = pays != null ?
                new ObjectParameter("pays", pays) :
                new ObjectParameter("pays", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("telephone", telephone) :
                new ObjectParameter("telephone", typeof(string));
    
            var villeParameter = ville != null ?
                new ObjectParameter("ville", ville) :
                new ObjectParameter("ville", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("creerClient", adresseParameter, emailParameter, nomParameter, paysParameter, telephoneParameter, villeParameter, codeUParameter);
        }
    
        public virtual int creerCommande_client(Nullable<decimal> quantite, string codePOINT_CONSOMMATION, string codeMARKETER, string codePRODUIT, string codeU)
        {
            var quantiteParameter = quantite.HasValue ?
                new ObjectParameter("quantite", quantite) :
                new ObjectParameter("quantite", typeof(decimal));
    
            var codePOINT_CONSOMMATIONParameter = codePOINT_CONSOMMATION != null ?
                new ObjectParameter("codePOINT_CONSOMMATION", codePOINT_CONSOMMATION) :
                new ObjectParameter("codePOINT_CONSOMMATION", typeof(string));
    
            var codeMARKETERParameter = codeMARKETER != null ?
                new ObjectParameter("codeMARKETER", codeMARKETER) :
                new ObjectParameter("codeMARKETER", typeof(string));
    
            var codePRODUITParameter = codePRODUIT != null ?
                new ObjectParameter("codePRODUIT", codePRODUIT) :
                new ObjectParameter("codePRODUIT", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("creerCommande_client", quantiteParameter, codePOINT_CONSOMMATIONParameter, codeMARKETERParameter, codePRODUITParameter, codeUParameter);
        }
    
        public virtual int creerCommande_marketer(Nullable<decimal> quantite, string codeMARKETER, string codeFOURNISSEUR, string codePRODUIT, string codeU)
        {
            var quantiteParameter = quantite.HasValue ?
                new ObjectParameter("quantite", quantite) :
                new ObjectParameter("quantite", typeof(decimal));
    
            var codeMARKETERParameter = codeMARKETER != null ?
                new ObjectParameter("codeMARKETER", codeMARKETER) :
                new ObjectParameter("codeMARKETER", typeof(string));
    
            var codeFOURNISSEURParameter = codeFOURNISSEUR != null ?
                new ObjectParameter("codeFOURNISSEUR", codeFOURNISSEUR) :
                new ObjectParameter("codeFOURNISSEUR", typeof(string));
    
            var codePRODUITParameter = codePRODUIT != null ?
                new ObjectParameter("codePRODUIT", codePRODUIT) :
                new ObjectParameter("codePRODUIT", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("creerCommande_marketer", quantiteParameter, codeMARKETERParameter, codeFOURNISSEURParameter, codePRODUITParameter, codeUParameter);
        }
    
        public virtual int creerCompte_marketer(Nullable<decimal> montant_net, string codeMark, string codeU)
        {
            var montant_netParameter = montant_net.HasValue ?
                new ObjectParameter("montant_net", montant_net) :
                new ObjectParameter("montant_net", typeof(decimal));
    
            var codeMarkParameter = codeMark != null ?
                new ObjectParameter("codeMark", codeMark) :
                new ObjectParameter("codeMark", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("creerCompte_marketer", montant_netParameter, codeMarkParameter, codeUParameter);
        }
    
        public virtual int creerCompte_utilisateur(string indice, string login, string mdp, string niveau, string statut, string codeUtilisateur, string codeU)
        {
            var indiceParameter = indice != null ?
                new ObjectParameter("indice", indice) :
                new ObjectParameter("indice", typeof(string));
    
            var loginParameter = login != null ?
                new ObjectParameter("login", login) :
                new ObjectParameter("login", typeof(string));
    
            var mdpParameter = mdp != null ?
                new ObjectParameter("mdp", mdp) :
                new ObjectParameter("mdp", typeof(string));
    
            var niveauParameter = niveau != null ?
                new ObjectParameter("niveau", niveau) :
                new ObjectParameter("niveau", typeof(string));
    
            var statutParameter = statut != null ?
                new ObjectParameter("statut", statut) :
                new ObjectParameter("statut", typeof(string));
    
            var codeUtilisateurParameter = codeUtilisateur != null ?
                new ObjectParameter("codeUtilisateur", codeUtilisateur) :
                new ObjectParameter("codeUtilisateur", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("creerCompte_utilisateur", indiceParameter, loginParameter, mdpParameter, niveauParameter, statutParameter, codeUtilisateurParameter, codeUParameter);
        }
    
        public virtual int creerDepot(string adresse, string email, string localisation, string nom, string pays, string telephone, string ville, string codeU)
        {
            var adresseParameter = adresse != null ?
                new ObjectParameter("adresse", adresse) :
                new ObjectParameter("adresse", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var localisationParameter = localisation != null ?
                new ObjectParameter("localisation", localisation) :
                new ObjectParameter("localisation", typeof(string));
    
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var paysParameter = pays != null ?
                new ObjectParameter("pays", pays) :
                new ObjectParameter("pays", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("telephone", telephone) :
                new ObjectParameter("telephone", typeof(string));
    
            var villeParameter = ville != null ?
                new ObjectParameter("ville", ville) :
                new ObjectParameter("ville", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("creerDepot", adresseParameter, emailParameter, localisationParameter, nomParameter, paysParameter, telephoneParameter, villeParameter, codeUParameter);
        }
    
        public virtual int creerDette(Nullable<decimal> montant_paye, Nullable<decimal> montant_restant, Nullable<decimal> montant_total, Nullable<decimal> quantite, string codeCLIENT, string codeU)
        {
            var montant_payeParameter = montant_paye.HasValue ?
                new ObjectParameter("montant_paye", montant_paye) :
                new ObjectParameter("montant_paye", typeof(decimal));
    
            var montant_restantParameter = montant_restant.HasValue ?
                new ObjectParameter("montant_restant", montant_restant) :
                new ObjectParameter("montant_restant", typeof(decimal));
    
            var montant_totalParameter = montant_total.HasValue ?
                new ObjectParameter("montant_total", montant_total) :
                new ObjectParameter("montant_total", typeof(decimal));
    
            var quantiteParameter = quantite.HasValue ?
                new ObjectParameter("quantite", quantite) :
                new ObjectParameter("quantite", typeof(decimal));
    
            var codeCLIENTParameter = codeCLIENT != null ?
                new ObjectParameter("codeCLIENT", codeCLIENT) :
                new ObjectParameter("codeCLIENT", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("creerDette", montant_payeParameter, montant_restantParameter, montant_totalParameter, quantiteParameter, codeCLIENTParameter, codeUParameter);
        }
    
        public virtual int creerFacturation_Client(string libelle, Nullable<decimal> montant_paye, Nullable<decimal> montant_restant, Nullable<decimal> montant_total, string codeCOMMANDE_CLIENT, string codeU)
        {
            var libelleParameter = libelle != null ?
                new ObjectParameter("libelle", libelle) :
                new ObjectParameter("libelle", typeof(string));
    
            var montant_payeParameter = montant_paye.HasValue ?
                new ObjectParameter("montant_paye", montant_paye) :
                new ObjectParameter("montant_paye", typeof(decimal));
    
            var montant_restantParameter = montant_restant.HasValue ?
                new ObjectParameter("montant_restant", montant_restant) :
                new ObjectParameter("montant_restant", typeof(decimal));
    
            var montant_totalParameter = montant_total.HasValue ?
                new ObjectParameter("montant_total", montant_total) :
                new ObjectParameter("montant_total", typeof(decimal));
    
            var codeCOMMANDE_CLIENTParameter = codeCOMMANDE_CLIENT != null ?
                new ObjectParameter("codeCOMMANDE_CLIENT", codeCOMMANDE_CLIENT) :
                new ObjectParameter("codeCOMMANDE_CLIENT", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("creerFacturation_Client", libelleParameter, montant_payeParameter, montant_restantParameter, montant_totalParameter, codeCOMMANDE_CLIENTParameter, codeUParameter);
        }
    
        public virtual int creerFacturationMarketer(string libelle, Nullable<decimal> montant_paye, Nullable<decimal> montant_restant, Nullable<decimal> montant_total, string codeCOMMANDE_MARKETER, string codeU)
        {
            var libelleParameter = libelle != null ?
                new ObjectParameter("libelle", libelle) :
                new ObjectParameter("libelle", typeof(string));
    
            var montant_payeParameter = montant_paye.HasValue ?
                new ObjectParameter("montant_paye", montant_paye) :
                new ObjectParameter("montant_paye", typeof(decimal));
    
            var montant_restantParameter = montant_restant.HasValue ?
                new ObjectParameter("montant_restant", montant_restant) :
                new ObjectParameter("montant_restant", typeof(decimal));
    
            var montant_totalParameter = montant_total.HasValue ?
                new ObjectParameter("montant_total", montant_total) :
                new ObjectParameter("montant_total", typeof(decimal));
    
            var codeCOMMANDE_MARKETERParameter = codeCOMMANDE_MARKETER != null ?
                new ObjectParameter("codeCOMMANDE_MARKETER", codeCOMMANDE_MARKETER) :
                new ObjectParameter("codeCOMMANDE_MARKETER", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("creerFacturationMarketer", libelleParameter, montant_payeParameter, montant_restantParameter, montant_totalParameter, codeCOMMANDE_MARKETERParameter, codeUParameter);
        }
    
        public virtual int creerFournisseur(string adresse, string email, string nom, string pays, string telephone, string ville, string codeU)
        {
            var adresseParameter = adresse != null ?
                new ObjectParameter("adresse", adresse) :
                new ObjectParameter("adresse", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var paysParameter = pays != null ?
                new ObjectParameter("pays", pays) :
                new ObjectParameter("pays", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("telephone", telephone) :
                new ObjectParameter("telephone", typeof(string));
    
            var villeParameter = ville != null ?
                new ObjectParameter("ville", ville) :
                new ObjectParameter("ville", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("creerFournisseur", adresseParameter, emailParameter, nomParameter, paysParameter, telephoneParameter, villeParameter, codeUParameter);
        }
    
        public virtual int creerHistorique(Nullable<System.DateTime> date_connexion, Nullable<System.DateTime> date_deconmexion, Nullable<int> nbe_tentative, string operation_effectuee, string codeU)
        {
            var date_connexionParameter = date_connexion.HasValue ?
                new ObjectParameter("date_connexion", date_connexion) :
                new ObjectParameter("date_connexion", typeof(System.DateTime));
    
            var date_deconmexionParameter = date_deconmexion.HasValue ?
                new ObjectParameter("date_deconmexion", date_deconmexion) :
                new ObjectParameter("date_deconmexion", typeof(System.DateTime));
    
            var nbe_tentativeParameter = nbe_tentative.HasValue ?
                new ObjectParameter("nbe_tentative", nbe_tentative) :
                new ObjectParameter("nbe_tentative", typeof(int));
    
            var operation_effectueeParameter = operation_effectuee != null ?
                new ObjectParameter("operation_effectuee", operation_effectuee) :
                new ObjectParameter("operation_effectuee", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("creerHistorique", date_connexionParameter, date_deconmexionParameter, nbe_tentativeParameter, operation_effectueeParameter, codeUParameter);
        }
    
        public virtual int creerJoinBE_SoutageToNavire(string codeNAVIRE, string codeBE_SOUTAGE, string codeU)
        {
            var codeNAVIREParameter = codeNAVIRE != null ?
                new ObjectParameter("codeNAVIRE", codeNAVIRE) :
                new ObjectParameter("codeNAVIRE", typeof(string));
    
            var codeBE_SOUTAGEParameter = codeBE_SOUTAGE != null ?
                new ObjectParameter("codeBE_SOUTAGE", codeBE_SOUTAGE) :
                new ObjectParameter("codeBE_SOUTAGE", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("creerJoinBE_SoutageToNavire", codeNAVIREParameter, codeBE_SOUTAGEParameter, codeUParameter);
        }
    
        public virtual int creerJoinDetteToProduit(string codePRODUIT, string codeDETTE, string codeU)
        {
            var codePRODUITParameter = codePRODUIT != null ?
                new ObjectParameter("codePRODUIT", codePRODUIT) :
                new ObjectParameter("codePRODUIT", typeof(string));
    
            var codeDETTEParameter = codeDETTE != null ?
                new ObjectParameter("codeDETTE", codeDETTE) :
                new ObjectParameter("codeDETTE", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("creerJoinDetteToProduit", codePRODUITParameter, codeDETTEParameter, codeUParameter);
        }
    
        public virtual int creerJoinProduitToCommande_client(string codeCOMMANDE_CLIENT, string codeProduit, string codeU)
        {
            var codeCOMMANDE_CLIENTParameter = codeCOMMANDE_CLIENT != null ?
                new ObjectParameter("codeCOMMANDE_CLIENT", codeCOMMANDE_CLIENT) :
                new ObjectParameter("codeCOMMANDE_CLIENT", typeof(string));
    
            var codeProduitParameter = codeProduit != null ?
                new ObjectParameter("codeProduit", codeProduit) :
                new ObjectParameter("codeProduit", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("creerJoinProduitToCommande_client", codeCOMMANDE_CLIENTParameter, codeProduitParameter, codeUParameter);
        }
    
        public virtual int creerJoinTaxeToFacturation(string codeFACTURATION, string codeTAXE, string codeU)
        {
            var codeFACTURATIONParameter = codeFACTURATION != null ?
                new ObjectParameter("codeFACTURATION", codeFACTURATION) :
                new ObjectParameter("codeFACTURATION", typeof(string));
    
            var codeTAXEParameter = codeTAXE != null ?
                new ObjectParameter("codeTAXE", codeTAXE) :
                new ObjectParameter("codeTAXE", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("creerJoinTaxeToFacturation", codeFACTURATIONParameter, codeTAXEParameter, codeUParameter);
        }
    
        public virtual int creerMarketer(string adresse, string email, string nom, string pays, string telephone, string ville, string codeU)
        {
            var adresseParameter = adresse != null ?
                new ObjectParameter("adresse", adresse) :
                new ObjectParameter("adresse", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var paysParameter = pays != null ?
                new ObjectParameter("pays", pays) :
                new ObjectParameter("pays", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("telephone", telephone) :
                new ObjectParameter("telephone", typeof(string));
    
            var villeParameter = ville != null ?
                new ObjectParameter("ville", ville) :
                new ObjectParameter("ville", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("creerMarketer", adresseParameter, emailParameter, nomParameter, paysParameter, telephoneParameter, villeParameter, codeUParameter);
        }
    
        public virtual int creerNavire(Nullable<decimal> capacite, string nom, string codeU)
        {
            var capaciteParameter = capacite.HasValue ?
                new ObjectParameter("capacite", capacite) :
                new ObjectParameter("capacite", typeof(decimal));
    
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("creerNavire", capaciteParameter, nomParameter, codeUParameter);
        }
    
        public virtual int creerPoint_consommation(string adresse, string email, string localisation, string nom, string pays, string telephone, string ville, string codeCLIENT, string codeU)
        {
            var adresseParameter = adresse != null ?
                new ObjectParameter("adresse", adresse) :
                new ObjectParameter("adresse", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var localisationParameter = localisation != null ?
                new ObjectParameter("localisation", localisation) :
                new ObjectParameter("localisation", typeof(string));
    
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var paysParameter = pays != null ?
                new ObjectParameter("pays", pays) :
                new ObjectParameter("pays", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("telephone", telephone) :
                new ObjectParameter("telephone", typeof(string));
    
            var villeParameter = ville != null ?
                new ObjectParameter("ville", ville) :
                new ObjectParameter("ville", typeof(string));
    
            var codeCLIENTParameter = codeCLIENT != null ?
                new ObjectParameter("codeCLIENT", codeCLIENT) :
                new ObjectParameter("codeCLIENT", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("creerPoint_consommation", adresseParameter, emailParameter, localisationParameter, nomParameter, paysParameter, telephoneParameter, villeParameter, codeCLIENTParameter, codeUParameter);
        }
    
        public virtual int creerPompe(string libelle, string codeTANKER, string codeU)
        {
            var libelleParameter = libelle != null ?
                new ObjectParameter("libelle", libelle) :
                new ObjectParameter("libelle", typeof(string));
    
            var codeTANKERParameter = codeTANKER != null ?
                new ObjectParameter("codeTANKER", codeTANKER) :
                new ObjectParameter("codeTANKER", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("creerPompe", libelleParameter, codeTANKERParameter, codeUParameter);
        }
    
        public virtual int creerPompiste(string adresse, string email, string nom, string prenom, string telephone, string codeStation, string codeU)
        {
            var adresseParameter = adresse != null ?
                new ObjectParameter("adresse", adresse) :
                new ObjectParameter("adresse", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var prenomParameter = prenom != null ?
                new ObjectParameter("prenom", prenom) :
                new ObjectParameter("prenom", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("telephone", telephone) :
                new ObjectParameter("telephone", typeof(string));
    
            var codeStationParameter = codeStation != null ?
                new ObjectParameter("codeStation", codeStation) :
                new ObjectParameter("codeStation", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("creerPompiste", adresseParameter, emailParameter, nomParameter, prenomParameter, telephoneParameter, codeStationParameter, codeUParameter);
        }
    
        public virtual int creerProduit(string designation, string libelle, Nullable<decimal> prix, string unite_mesure, string codeU)
        {
            var designationParameter = designation != null ?
                new ObjectParameter("designation", designation) :
                new ObjectParameter("designation", typeof(string));
    
            var libelleParameter = libelle != null ?
                new ObjectParameter("libelle", libelle) :
                new ObjectParameter("libelle", typeof(string));
    
            var prixParameter = prix.HasValue ?
                new ObjectParameter("prix", prix) :
                new ObjectParameter("prix", typeof(decimal));
    
            var unite_mesureParameter = unite_mesure != null ?
                new ObjectParameter("unite_mesure", unite_mesure) :
                new ObjectParameter("unite_mesure", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("creerProduit", designationParameter, libelleParameter, prixParameter, unite_mesureParameter, codeUParameter);
        }
    
        public virtual int creerReception(Nullable<decimal> quantite, string codeCOMMANDE_CLIENT, string codeU)
        {
            var quantiteParameter = quantite.HasValue ?
                new ObjectParameter("quantite", quantite) :
                new ObjectParameter("quantite", typeof(decimal));
    
            var codeCOMMANDE_CLIENTParameter = codeCOMMANDE_CLIENT != null ?
                new ObjectParameter("codeCOMMANDE_CLIENT", codeCOMMANDE_CLIENT) :
                new ObjectParameter("codeCOMMANDE_CLIENT", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("creerReception", quantiteParameter, codeCOMMANDE_CLIENTParameter, codeUParameter);
        }
    
        public virtual int creerReglement_dette(string libelle, Nullable<decimal> montant, string codeDETTE, string codeU)
        {
            var libelleParameter = libelle != null ?
                new ObjectParameter("libelle", libelle) :
                new ObjectParameter("libelle", typeof(string));
    
            var montantParameter = montant.HasValue ?
                new ObjectParameter("montant", montant) :
                new ObjectParameter("montant", typeof(decimal));
    
            var codeDETTEParameter = codeDETTE != null ?
                new ObjectParameter("codeDETTE", codeDETTE) :
                new ObjectParameter("codeDETTE", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("creerReglement_dette", libelleParameter, montantParameter, codeDETTEParameter, codeUParameter);
        }
    
        public virtual int creerStation(string adresse, string email, string localisation, string nom, string pays, string telephone, string ville, string codeMARKETER, string codeU)
        {
            var adresseParameter = adresse != null ?
                new ObjectParameter("adresse", adresse) :
                new ObjectParameter("adresse", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var localisationParameter = localisation != null ?
                new ObjectParameter("localisation", localisation) :
                new ObjectParameter("localisation", typeof(string));
    
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var paysParameter = pays != null ?
                new ObjectParameter("pays", pays) :
                new ObjectParameter("pays", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("telephone", telephone) :
                new ObjectParameter("telephone", typeof(string));
    
            var villeParameter = ville != null ?
                new ObjectParameter("ville", ville) :
                new ObjectParameter("ville", typeof(string));
    
            var codeMARKETERParameter = codeMARKETER != null ?
                new ObjectParameter("codeMARKETER", codeMARKETER) :
                new ObjectParameter("codeMARKETER", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("creerStation", adresseParameter, emailParameter, localisationParameter, nomParameter, paysParameter, telephoneParameter, villeParameter, codeMARKETERParameter, codeUParameter);
        }
    
        public virtual int creerStock(Nullable<decimal> quantite, string codeStation, string codePRODUIT, string libelle, string codeU)
        {
            var quantiteParameter = quantite.HasValue ?
                new ObjectParameter("quantite", quantite) :
                new ObjectParameter("quantite", typeof(decimal));
    
            var codeStationParameter = codeStation != null ?
                new ObjectParameter("codeStation", codeStation) :
                new ObjectParameter("codeStation", typeof(string));
    
            var codePRODUITParameter = codePRODUIT != null ?
                new ObjectParameter("codePRODUIT", codePRODUIT) :
                new ObjectParameter("codePRODUIT", typeof(string));
    
            var libelleParameter = libelle != null ?
                new ObjectParameter("libelle", libelle) :
                new ObjectParameter("libelle", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("creerStock", quantiteParameter, codeStationParameter, codePRODUITParameter, libelleParameter, codeUParameter);
        }
    
        public virtual int creerTanker(Nullable<decimal> quantite, string codePRODUIT, string codeStation, string libelle, string codeU)
        {
            var quantiteParameter = quantite.HasValue ?
                new ObjectParameter("quantite", quantite) :
                new ObjectParameter("quantite", typeof(decimal));
    
            var codePRODUITParameter = codePRODUIT != null ?
                new ObjectParameter("codePRODUIT", codePRODUIT) :
                new ObjectParameter("codePRODUIT", typeof(string));
    
            var codeStationParameter = codeStation != null ?
                new ObjectParameter("codeStation", codeStation) :
                new ObjectParameter("codeStation", typeof(string));
    
            var libelleParameter = libelle != null ?
                new ObjectParameter("libelle", libelle) :
                new ObjectParameter("libelle", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("creerTanker", quantiteParameter, codePRODUITParameter, codeStationParameter, libelleParameter, codeUParameter);
        }
    
        public virtual int creerTaxe(string libelle, Nullable<decimal> taux, string codeU)
        {
            var libelleParameter = libelle != null ?
                new ObjectParameter("libelle", libelle) :
                new ObjectParameter("libelle", typeof(string));
    
            var tauxParameter = taux.HasValue ?
                new ObjectParameter("taux", taux) :
                new ObjectParameter("taux", typeof(decimal));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("creerTaxe", libelleParameter, tauxParameter, codeUParameter);
        }
    
        public virtual int creerTranche(string libelle, Nullable<decimal> montant, string codeFACTURATION, string codeU)
        {
            var libelleParameter = libelle != null ?
                new ObjectParameter("libelle", libelle) :
                new ObjectParameter("libelle", typeof(string));
    
            var montantParameter = montant.HasValue ?
                new ObjectParameter("montant", montant) :
                new ObjectParameter("montant", typeof(decimal));
    
            var codeFACTURATIONParameter = codeFACTURATION != null ?
                new ObjectParameter("codeFACTURATION", codeFACTURATION) :
                new ObjectParameter("codeFACTURATION", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("creerTranche", libelleParameter, montantParameter, codeFACTURATIONParameter, codeUParameter);
        }
    
        public virtual int creerTranche_Marketer(string libelle, Nullable<decimal> montant, string codeFACTURATION_MARKETER, string codeU)
        {
            var libelleParameter = libelle != null ?
                new ObjectParameter("libelle", libelle) :
                new ObjectParameter("libelle", typeof(string));
    
            var montantParameter = montant.HasValue ?
                new ObjectParameter("montant", montant) :
                new ObjectParameter("montant", typeof(decimal));
    
            var codeFACTURATION_MARKETERParameter = codeFACTURATION_MARKETER != null ?
                new ObjectParameter("codeFACTURATION_MARKETER", codeFACTURATION_MARKETER) :
                new ObjectParameter("codeFACTURATION_MARKETER", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("creerTranche_Marketer", libelleParameter, montantParameter, codeFACTURATION_MARKETERParameter, codeUParameter);
        }
    
        public virtual int creerTransaction_effectuee(string libelle, Nullable<decimal> montant_transaction, string codeCOMPTE_MARKETER, string codeU)
        {
            var libelleParameter = libelle != null ?
                new ObjectParameter("libelle", libelle) :
                new ObjectParameter("libelle", typeof(string));
    
            var montant_transactionParameter = montant_transaction.HasValue ?
                new ObjectParameter("montant_transaction", montant_transaction) :
                new ObjectParameter("montant_transaction", typeof(decimal));
    
            var codeCOMPTE_MARKETERParameter = codeCOMPTE_MARKETER != null ?
                new ObjectParameter("codeCOMPTE_MARKETER", codeCOMPTE_MARKETER) :
                new ObjectParameter("codeCOMPTE_MARKETER", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("creerTransaction_effectuee", libelleParameter, montant_transactionParameter, codeCOMPTE_MARKETERParameter, codeUParameter);
        }
    
        public virtual int creerTransporteur(string email, string localisation, string nom, string pays, string telephone, string ville, string codeU)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var localisationParameter = localisation != null ?
                new ObjectParameter("localisation", localisation) :
                new ObjectParameter("localisation", typeof(string));
    
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var paysParameter = pays != null ?
                new ObjectParameter("pays", pays) :
                new ObjectParameter("pays", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("telephone", telephone) :
                new ObjectParameter("telephone", typeof(string));
    
            var villeParameter = ville != null ?
                new ObjectParameter("ville", ville) :
                new ObjectParameter("ville", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("creerTransporteur", emailParameter, localisationParameter, nomParameter, paysParameter, telephoneParameter, villeParameter, codeUParameter);
        }
    
        public virtual int creerUtilisateur(string email, string nom, string prenom, string telephone, string codeU)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var prenomParameter = prenom != null ?
                new ObjectParameter("prenom", prenom) :
                new ObjectParameter("prenom", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("telephone", telephone) :
                new ObjectParameter("telephone", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("creerUtilisateur", emailParameter, nomParameter, prenomParameter, telephoneParameter, codeUParameter);
        }
    
        public virtual int creerVente_carburant(Nullable<int> compteur_apres, Nullable<int> compteur_avant, Nullable<System.DateTime> date_vente, Nullable<decimal> quantite, string codePOMPE, string codePOMPISTE, string codeU)
        {
            var compteur_apresParameter = compteur_apres.HasValue ?
                new ObjectParameter("compteur_apres", compteur_apres) :
                new ObjectParameter("compteur_apres", typeof(int));
    
            var compteur_avantParameter = compteur_avant.HasValue ?
                new ObjectParameter("compteur_avant", compteur_avant) :
                new ObjectParameter("compteur_avant", typeof(int));
    
            var date_venteParameter = date_vente.HasValue ?
                new ObjectParameter("date_vente", date_vente) :
                new ObjectParameter("date_vente", typeof(System.DateTime));
    
            var quantiteParameter = quantite.HasValue ?
                new ObjectParameter("quantite", quantite) :
                new ObjectParameter("quantite", typeof(decimal));
    
            var codePOMPEParameter = codePOMPE != null ?
                new ObjectParameter("codePOMPE", codePOMPE) :
                new ObjectParameter("codePOMPE", typeof(string));
    
            var codePOMPISTEParameter = codePOMPISTE != null ?
                new ObjectParameter("codePOMPISTE", codePOMPISTE) :
                new ObjectParameter("codePOMPISTE", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("creerVente_carburant", compteur_apresParameter, compteur_avantParameter, date_venteParameter, quantiteParameter, codePOMPEParameter, codePOMPISTEParameter, codeUParameter);
        }
    
        public virtual int modifierBC(string code, Nullable<decimal> quantite, Nullable<System.DateTime> date_emission, string codeDEPOT, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var quantiteParameter = quantite.HasValue ?
                new ObjectParameter("quantite", quantite) :
                new ObjectParameter("quantite", typeof(decimal));
    
            var date_emissionParameter = date_emission.HasValue ?
                new ObjectParameter("date_emission", date_emission) :
                new ObjectParameter("date_emission", typeof(System.DateTime));
    
            var codeDEPOTParameter = codeDEPOT != null ?
                new ObjectParameter("codeDEPOT", codeDEPOT) :
                new ObjectParameter("codeDEPOT", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifierBC", codeParameter, quantiteParameter, date_emissionParameter, codeDEPOTParameter, codeUParameter);
        }
    
        public virtual int modifierBE_bac_bac(string code, string libelle, Nullable<decimal> quantite, string codeCOMMANDE_MARKET, string codeDEPOT, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var libelleParameter = libelle != null ?
                new ObjectParameter("libelle", libelle) :
                new ObjectParameter("libelle", typeof(string));
    
            var quantiteParameter = quantite.HasValue ?
                new ObjectParameter("quantite", quantite) :
                new ObjectParameter("quantite", typeof(decimal));
    
            var codeCOMMANDE_MARKETParameter = codeCOMMANDE_MARKET != null ?
                new ObjectParameter("codeCOMMANDE_MARKET", codeCOMMANDE_MARKET) :
                new ObjectParameter("codeCOMMANDE_MARKET", typeof(string));
    
            var codeDEPOTParameter = codeDEPOT != null ?
                new ObjectParameter("codeDEPOT", codeDEPOT) :
                new ObjectParameter("codeDEPOT", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifierBE_bac_bac", codeParameter, libelleParameter, quantiteParameter, codeCOMMANDE_MARKETParameter, codeDEPOTParameter, codeUParameter);
        }
    
        public virtual int modifierBE_export(string code, string adresse, string cni_chauffeur, Nullable<System.DateTime> date_emission, Nullable<int> duree_validite, string immatriculation_camion, string nom_chauffeur, string num_decl_douane_im7, string pays_destination, Nullable<decimal> quantite, string ville_destination, string codeDEPOT, string codeCOMMANDE_CLIENT, string codeTRANSPORTEUR, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var adresseParameter = adresse != null ?
                new ObjectParameter("adresse", adresse) :
                new ObjectParameter("adresse", typeof(string));
    
            var cni_chauffeurParameter = cni_chauffeur != null ?
                new ObjectParameter("cni_chauffeur", cni_chauffeur) :
                new ObjectParameter("cni_chauffeur", typeof(string));
    
            var date_emissionParameter = date_emission.HasValue ?
                new ObjectParameter("date_emission", date_emission) :
                new ObjectParameter("date_emission", typeof(System.DateTime));
    
            var duree_validiteParameter = duree_validite.HasValue ?
                new ObjectParameter("duree_validite", duree_validite) :
                new ObjectParameter("duree_validite", typeof(int));
    
            var immatriculation_camionParameter = immatriculation_camion != null ?
                new ObjectParameter("immatriculation_camion", immatriculation_camion) :
                new ObjectParameter("immatriculation_camion", typeof(string));
    
            var nom_chauffeurParameter = nom_chauffeur != null ?
                new ObjectParameter("nom_chauffeur", nom_chauffeur) :
                new ObjectParameter("nom_chauffeur", typeof(string));
    
            var num_decl_douane_im7Parameter = num_decl_douane_im7 != null ?
                new ObjectParameter("num_decl_douane_im7", num_decl_douane_im7) :
                new ObjectParameter("num_decl_douane_im7", typeof(string));
    
            var pays_destinationParameter = pays_destination != null ?
                new ObjectParameter("pays_destination", pays_destination) :
                new ObjectParameter("pays_destination", typeof(string));
    
            var quantiteParameter = quantite.HasValue ?
                new ObjectParameter("quantite", quantite) :
                new ObjectParameter("quantite", typeof(decimal));
    
            var ville_destinationParameter = ville_destination != null ?
                new ObjectParameter("ville_destination", ville_destination) :
                new ObjectParameter("ville_destination", typeof(string));
    
            var codeDEPOTParameter = codeDEPOT != null ?
                new ObjectParameter("codeDEPOT", codeDEPOT) :
                new ObjectParameter("codeDEPOT", typeof(string));
    
            var codeCOMMANDE_CLIENTParameter = codeCOMMANDE_CLIENT != null ?
                new ObjectParameter("codeCOMMANDE_CLIENT", codeCOMMANDE_CLIENT) :
                new ObjectParameter("codeCOMMANDE_CLIENT", typeof(string));
    
            var codeTRANSPORTEURParameter = codeTRANSPORTEUR != null ?
                new ObjectParameter("codeTRANSPORTEUR", codeTRANSPORTEUR) :
                new ObjectParameter("codeTRANSPORTEUR", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifierBE_export", codeParameter, adresseParameter, cni_chauffeurParameter, date_emissionParameter, duree_validiteParameter, immatriculation_camionParameter, nom_chauffeurParameter, num_decl_douane_im7Parameter, pays_destinationParameter, quantiteParameter, ville_destinationParameter, codeDEPOTParameter, codeCOMMANDE_CLIENTParameter, codeTRANSPORTEURParameter, codeUParameter);
        }
    
        public virtual int modifierBE_livraison(string code, string cni_chauffeur, Nullable<System.DateTime> date_emission, Nullable<int> duree_validite, string immatriculation_camion, string nom_chauffeur, string codeCOMMANDE_CLIENT, string codeDEPOT, string codeTRANSPORTEUR, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var cni_chauffeurParameter = cni_chauffeur != null ?
                new ObjectParameter("cni_chauffeur", cni_chauffeur) :
                new ObjectParameter("cni_chauffeur", typeof(string));
    
            var date_emissionParameter = date_emission.HasValue ?
                new ObjectParameter("date_emission", date_emission) :
                new ObjectParameter("date_emission", typeof(System.DateTime));
    
            var duree_validiteParameter = duree_validite.HasValue ?
                new ObjectParameter("duree_validite", duree_validite) :
                new ObjectParameter("duree_validite", typeof(int));
    
            var immatriculation_camionParameter = immatriculation_camion != null ?
                new ObjectParameter("immatriculation_camion", immatriculation_camion) :
                new ObjectParameter("immatriculation_camion", typeof(string));
    
            var nom_chauffeurParameter = nom_chauffeur != null ?
                new ObjectParameter("nom_chauffeur", nom_chauffeur) :
                new ObjectParameter("nom_chauffeur", typeof(string));
    
            var codeCOMMANDE_CLIENTParameter = codeCOMMANDE_CLIENT != null ?
                new ObjectParameter("codeCOMMANDE_CLIENT", codeCOMMANDE_CLIENT) :
                new ObjectParameter("codeCOMMANDE_CLIENT", typeof(string));
    
            var codeDEPOTParameter = codeDEPOT != null ?
                new ObjectParameter("codeDEPOT", codeDEPOT) :
                new ObjectParameter("codeDEPOT", typeof(string));
    
            var codeTRANSPORTEURParameter = codeTRANSPORTEUR != null ?
                new ObjectParameter("codeTRANSPORTEUR", codeTRANSPORTEUR) :
                new ObjectParameter("codeTRANSPORTEUR", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifierBE_livraison", codeParameter, cni_chauffeurParameter, date_emissionParameter, duree_validiteParameter, immatriculation_camionParameter, nom_chauffeurParameter, codeCOMMANDE_CLIENTParameter, codeDEPOTParameter, codeTRANSPORTEURParameter, codeUParameter);
        }
    
        public virtual int modifierBE_soutage(string code, Nullable<System.DateTime> date_emission, Nullable<int> duree_validite, string immatriculation_camion, string nom_chauffeur, string nom_client, Nullable<decimal> quantite, string codeCOMMANDE_CLIENT, string codeDEPOT, string codeTRANSPORTEUR, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var date_emissionParameter = date_emission.HasValue ?
                new ObjectParameter("date_emission", date_emission) :
                new ObjectParameter("date_emission", typeof(System.DateTime));
    
            var duree_validiteParameter = duree_validite.HasValue ?
                new ObjectParameter("duree_validite", duree_validite) :
                new ObjectParameter("duree_validite", typeof(int));
    
            var immatriculation_camionParameter = immatriculation_camion != null ?
                new ObjectParameter("immatriculation_camion", immatriculation_camion) :
                new ObjectParameter("immatriculation_camion", typeof(string));
    
            var nom_chauffeurParameter = nom_chauffeur != null ?
                new ObjectParameter("nom_chauffeur", nom_chauffeur) :
                new ObjectParameter("nom_chauffeur", typeof(string));
    
            var nom_clientParameter = nom_client != null ?
                new ObjectParameter("nom_client", nom_client) :
                new ObjectParameter("nom_client", typeof(string));
    
            var quantiteParameter = quantite.HasValue ?
                new ObjectParameter("quantite", quantite) :
                new ObjectParameter("quantite", typeof(decimal));
    
            var codeCOMMANDE_CLIENTParameter = codeCOMMANDE_CLIENT != null ?
                new ObjectParameter("codeCOMMANDE_CLIENT", codeCOMMANDE_CLIENT) :
                new ObjectParameter("codeCOMMANDE_CLIENT", typeof(string));
    
            var codeDEPOTParameter = codeDEPOT != null ?
                new ObjectParameter("codeDEPOT", codeDEPOT) :
                new ObjectParameter("codeDEPOT", typeof(string));
    
            var codeTRANSPORTEURParameter = codeTRANSPORTEUR != null ?
                new ObjectParameter("codeTRANSPORTEUR", codeTRANSPORTEUR) :
                new ObjectParameter("codeTRANSPORTEUR", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifierBE_soutage", codeParameter, date_emissionParameter, duree_validiteParameter, immatriculation_camionParameter, nom_chauffeurParameter, nom_clientParameter, quantiteParameter, codeCOMMANDE_CLIENTParameter, codeDEPOTParameter, codeTRANSPORTEURParameter, codeUParameter);
        }
    
        public virtual int modifierBE_TRANSFERT(string code, Nullable<System.DateTime> date_emission, Nullable<int> duree_validite, string immatriculation_camion, string nom_chauffeur, Nullable<decimal> quantite, string codeMARKETER, string codeDEPOT, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var date_emissionParameter = date_emission.HasValue ?
                new ObjectParameter("date_emission", date_emission) :
                new ObjectParameter("date_emission", typeof(System.DateTime));
    
            var duree_validiteParameter = duree_validite.HasValue ?
                new ObjectParameter("duree_validite", duree_validite) :
                new ObjectParameter("duree_validite", typeof(int));
    
            var immatriculation_camionParameter = immatriculation_camion != null ?
                new ObjectParameter("immatriculation_camion", immatriculation_camion) :
                new ObjectParameter("immatriculation_camion", typeof(string));
    
            var nom_chauffeurParameter = nom_chauffeur != null ?
                new ObjectParameter("nom_chauffeur", nom_chauffeur) :
                new ObjectParameter("nom_chauffeur", typeof(string));
    
            var quantiteParameter = quantite.HasValue ?
                new ObjectParameter("quantite", quantite) :
                new ObjectParameter("quantite", typeof(decimal));
    
            var codeMARKETERParameter = codeMARKETER != null ?
                new ObjectParameter("codeMARKETER", codeMARKETER) :
                new ObjectParameter("codeMARKETER", typeof(string));
    
            var codeDEPOTParameter = codeDEPOT != null ?
                new ObjectParameter("codeDEPOT", codeDEPOT) :
                new ObjectParameter("codeDEPOT", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifierBE_TRANSFERT", codeParameter, date_emissionParameter, duree_validiteParameter, immatriculation_camionParameter, nom_chauffeurParameter, quantiteParameter, codeMARKETERParameter, codeDEPOTParameter, codeUParameter);
        }
    
        public virtual int modifierClient(string code, string adresse, string email, string nom, string pays, string telephone, string ville, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var adresseParameter = adresse != null ?
                new ObjectParameter("adresse", adresse) :
                new ObjectParameter("adresse", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var paysParameter = pays != null ?
                new ObjectParameter("pays", pays) :
                new ObjectParameter("pays", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("telephone", telephone) :
                new ObjectParameter("telephone", typeof(string));
    
            var villeParameter = ville != null ?
                new ObjectParameter("ville", ville) :
                new ObjectParameter("ville", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifierClient", codeParameter, adresseParameter, emailParameter, nomParameter, paysParameter, telephoneParameter, villeParameter, codeUParameter);
        }
    
        public virtual int modifierCommande_client(string code, Nullable<decimal> quantite, string codePOINT_CONSOMMATION, string codeMARKETER, string codePRODUIT, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var quantiteParameter = quantite.HasValue ?
                new ObjectParameter("quantite", quantite) :
                new ObjectParameter("quantite", typeof(decimal));
    
            var codePOINT_CONSOMMATIONParameter = codePOINT_CONSOMMATION != null ?
                new ObjectParameter("codePOINT_CONSOMMATION", codePOINT_CONSOMMATION) :
                new ObjectParameter("codePOINT_CONSOMMATION", typeof(string));
    
            var codeMARKETERParameter = codeMARKETER != null ?
                new ObjectParameter("codeMARKETER", codeMARKETER) :
                new ObjectParameter("codeMARKETER", typeof(string));
    
            var codePRODUITParameter = codePRODUIT != null ?
                new ObjectParameter("codePRODUIT", codePRODUIT) :
                new ObjectParameter("codePRODUIT", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifierCommande_client", codeParameter, quantiteParameter, codePOINT_CONSOMMATIONParameter, codeMARKETERParameter, codePRODUITParameter, codeUParameter);
        }
    
        public virtual int modifierCommande_marketer(string code, Nullable<decimal> quantite, string codeMARKETER, string codeFOURNISSEUR, string codePRODUIT, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var quantiteParameter = quantite.HasValue ?
                new ObjectParameter("quantite", quantite) :
                new ObjectParameter("quantite", typeof(decimal));
    
            var codeMARKETERParameter = codeMARKETER != null ?
                new ObjectParameter("codeMARKETER", codeMARKETER) :
                new ObjectParameter("codeMARKETER", typeof(string));
    
            var codeFOURNISSEURParameter = codeFOURNISSEUR != null ?
                new ObjectParameter("codeFOURNISSEUR", codeFOURNISSEUR) :
                new ObjectParameter("codeFOURNISSEUR", typeof(string));
    
            var codePRODUITParameter = codePRODUIT != null ?
                new ObjectParameter("codePRODUIT", codePRODUIT) :
                new ObjectParameter("codePRODUIT", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifierCommande_marketer", codeParameter, quantiteParameter, codeMARKETERParameter, codeFOURNISSEURParameter, codePRODUITParameter, codeUParameter);
        }
    
        public virtual int modifierCompte_marketer(string code, Nullable<decimal> montant_net, string codeMark, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var montant_netParameter = montant_net.HasValue ?
                new ObjectParameter("montant_net", montant_net) :
                new ObjectParameter("montant_net", typeof(decimal));
    
            var codeMarkParameter = codeMark != null ?
                new ObjectParameter("codeMark", codeMark) :
                new ObjectParameter("codeMark", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifierCompte_marketer", codeParameter, montant_netParameter, codeMarkParameter, codeUParameter);
        }
    
        public virtual int modifierCompte_utilisateur(string code, string indice, string login, string mdp, string niveau, string statut, string codeUtilisateur, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var indiceParameter = indice != null ?
                new ObjectParameter("indice", indice) :
                new ObjectParameter("indice", typeof(string));
    
            var loginParameter = login != null ?
                new ObjectParameter("login", login) :
                new ObjectParameter("login", typeof(string));
    
            var mdpParameter = mdp != null ?
                new ObjectParameter("mdp", mdp) :
                new ObjectParameter("mdp", typeof(string));
    
            var niveauParameter = niveau != null ?
                new ObjectParameter("niveau", niveau) :
                new ObjectParameter("niveau", typeof(string));
    
            var statutParameter = statut != null ?
                new ObjectParameter("statut", statut) :
                new ObjectParameter("statut", typeof(string));
    
            var codeUtilisateurParameter = codeUtilisateur != null ?
                new ObjectParameter("codeUtilisateur", codeUtilisateur) :
                new ObjectParameter("codeUtilisateur", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifierCompte_utilisateur", codeParameter, indiceParameter, loginParameter, mdpParameter, niveauParameter, statutParameter, codeUtilisateurParameter, codeUParameter);
        }
    
        public virtual int modifierDepot(string code, string adresse, string email, string localisation, string nom, string pays, string telephone, string ville, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var adresseParameter = adresse != null ?
                new ObjectParameter("adresse", adresse) :
                new ObjectParameter("adresse", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var localisationParameter = localisation != null ?
                new ObjectParameter("localisation", localisation) :
                new ObjectParameter("localisation", typeof(string));
    
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var paysParameter = pays != null ?
                new ObjectParameter("pays", pays) :
                new ObjectParameter("pays", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("telephone", telephone) :
                new ObjectParameter("telephone", typeof(string));
    
            var villeParameter = ville != null ?
                new ObjectParameter("ville", ville) :
                new ObjectParameter("ville", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifierDepot", codeParameter, adresseParameter, emailParameter, localisationParameter, nomParameter, paysParameter, telephoneParameter, villeParameter, codeUParameter);
        }
    
        public virtual int modifierDette(string code, Nullable<System.DateTime> date_dette, Nullable<decimal> montant_paye, Nullable<decimal> montant_restant, Nullable<decimal> montant_total, Nullable<decimal> quantite, string codeCLIENT, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var date_detteParameter = date_dette.HasValue ?
                new ObjectParameter("date_dette", date_dette) :
                new ObjectParameter("date_dette", typeof(System.DateTime));
    
            var montant_payeParameter = montant_paye.HasValue ?
                new ObjectParameter("montant_paye", montant_paye) :
                new ObjectParameter("montant_paye", typeof(decimal));
    
            var montant_restantParameter = montant_restant.HasValue ?
                new ObjectParameter("montant_restant", montant_restant) :
                new ObjectParameter("montant_restant", typeof(decimal));
    
            var montant_totalParameter = montant_total.HasValue ?
                new ObjectParameter("montant_total", montant_total) :
                new ObjectParameter("montant_total", typeof(decimal));
    
            var quantiteParameter = quantite.HasValue ?
                new ObjectParameter("quantite", quantite) :
                new ObjectParameter("quantite", typeof(decimal));
    
            var codeCLIENTParameter = codeCLIENT != null ?
                new ObjectParameter("codeCLIENT", codeCLIENT) :
                new ObjectParameter("codeCLIENT", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifierDette", codeParameter, date_detteParameter, montant_payeParameter, montant_restantParameter, montant_totalParameter, quantiteParameter, codeCLIENTParameter, codeUParameter);
        }
    
        public virtual int modifierFacturation_Client(string code, string libelle, Nullable<decimal> montant_paye, Nullable<decimal> montant_restant, Nullable<decimal> montant_total, string codeCOMMANDE_CLIENT, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var libelleParameter = libelle != null ?
                new ObjectParameter("libelle", libelle) :
                new ObjectParameter("libelle", typeof(string));
    
            var montant_payeParameter = montant_paye.HasValue ?
                new ObjectParameter("montant_paye", montant_paye) :
                new ObjectParameter("montant_paye", typeof(decimal));
    
            var montant_restantParameter = montant_restant.HasValue ?
                new ObjectParameter("montant_restant", montant_restant) :
                new ObjectParameter("montant_restant", typeof(decimal));
    
            var montant_totalParameter = montant_total.HasValue ?
                new ObjectParameter("montant_total", montant_total) :
                new ObjectParameter("montant_total", typeof(decimal));
    
            var codeCOMMANDE_CLIENTParameter = codeCOMMANDE_CLIENT != null ?
                new ObjectParameter("codeCOMMANDE_CLIENT", codeCOMMANDE_CLIENT) :
                new ObjectParameter("codeCOMMANDE_CLIENT", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifierFacturation_Client", codeParameter, libelleParameter, montant_payeParameter, montant_restantParameter, montant_totalParameter, codeCOMMANDE_CLIENTParameter, codeUParameter);
        }
    
        public virtual int modifierFacturationMarketer(string code, string libelle, Nullable<decimal> montant_paye, Nullable<decimal> montant_restant, Nullable<decimal> montant_total, string codeCOMMANDE_MARKETER, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var libelleParameter = libelle != null ?
                new ObjectParameter("libelle", libelle) :
                new ObjectParameter("libelle", typeof(string));
    
            var montant_payeParameter = montant_paye.HasValue ?
                new ObjectParameter("montant_paye", montant_paye) :
                new ObjectParameter("montant_paye", typeof(decimal));
    
            var montant_restantParameter = montant_restant.HasValue ?
                new ObjectParameter("montant_restant", montant_restant) :
                new ObjectParameter("montant_restant", typeof(decimal));
    
            var montant_totalParameter = montant_total.HasValue ?
                new ObjectParameter("montant_total", montant_total) :
                new ObjectParameter("montant_total", typeof(decimal));
    
            var codeCOMMANDE_MARKETERParameter = codeCOMMANDE_MARKETER != null ?
                new ObjectParameter("codeCOMMANDE_MARKETER", codeCOMMANDE_MARKETER) :
                new ObjectParameter("codeCOMMANDE_MARKETER", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifierFacturationMarketer", codeParameter, libelleParameter, montant_payeParameter, montant_restantParameter, montant_totalParameter, codeCOMMANDE_MARKETERParameter, codeUParameter);
        }
    
        public virtual int modifierFournisseur(string code, string adresse, string email, string nom, string pays, string telephone, string ville, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var adresseParameter = adresse != null ?
                new ObjectParameter("adresse", adresse) :
                new ObjectParameter("adresse", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var paysParameter = pays != null ?
                new ObjectParameter("pays", pays) :
                new ObjectParameter("pays", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("telephone", telephone) :
                new ObjectParameter("telephone", typeof(string));
    
            var villeParameter = ville != null ?
                new ObjectParameter("ville", ville) :
                new ObjectParameter("ville", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifierFournisseur", codeParameter, adresseParameter, emailParameter, nomParameter, paysParameter, telephoneParameter, villeParameter, codeUParameter);
        }
    
        public virtual int modifierJoinBE_SoutageToNavire(string codeNAVIRE, string codeBE_SOUTAGE, string codeU)
        {
            var codeNAVIREParameter = codeNAVIRE != null ?
                new ObjectParameter("codeNAVIRE", codeNAVIRE) :
                new ObjectParameter("codeNAVIRE", typeof(string));
    
            var codeBE_SOUTAGEParameter = codeBE_SOUTAGE != null ?
                new ObjectParameter("codeBE_SOUTAGE", codeBE_SOUTAGE) :
                new ObjectParameter("codeBE_SOUTAGE", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifierJoinBE_SoutageToNavire", codeNAVIREParameter, codeBE_SOUTAGEParameter, codeUParameter);
        }
    
        public virtual int modifierJoinDetteToProduit(string codePRODUIT, string codeDETTE, string codeU)
        {
            var codePRODUITParameter = codePRODUIT != null ?
                new ObjectParameter("codePRODUIT", codePRODUIT) :
                new ObjectParameter("codePRODUIT", typeof(string));
    
            var codeDETTEParameter = codeDETTE != null ?
                new ObjectParameter("codeDETTE", codeDETTE) :
                new ObjectParameter("codeDETTE", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifierJoinDetteToProduit", codePRODUITParameter, codeDETTEParameter, codeUParameter);
        }
    
        public virtual int modifierJoinProduitToCommande_client(string codeCOMMANDE_CLIENT, string codeProduit, string codeU)
        {
            var codeCOMMANDE_CLIENTParameter = codeCOMMANDE_CLIENT != null ?
                new ObjectParameter("codeCOMMANDE_CLIENT", codeCOMMANDE_CLIENT) :
                new ObjectParameter("codeCOMMANDE_CLIENT", typeof(string));
    
            var codeProduitParameter = codeProduit != null ?
                new ObjectParameter("codeProduit", codeProduit) :
                new ObjectParameter("codeProduit", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifierJoinProduitToCommande_client", codeCOMMANDE_CLIENTParameter, codeProduitParameter, codeUParameter);
        }
    
        public virtual int modifierJoinTaxeToFacturation(string codeFACTURATION, string codeTAXE, string codeU)
        {
            var codeFACTURATIONParameter = codeFACTURATION != null ?
                new ObjectParameter("codeFACTURATION", codeFACTURATION) :
                new ObjectParameter("codeFACTURATION", typeof(string));
    
            var codeTAXEParameter = codeTAXE != null ?
                new ObjectParameter("codeTAXE", codeTAXE) :
                new ObjectParameter("codeTAXE", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifierJoinTaxeToFacturation", codeFACTURATIONParameter, codeTAXEParameter, codeUParameter);
        }
    
        public virtual int modifierMarketer(string code, string adresse, string email, string nom, string pays, string telephone, string ville, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var adresseParameter = adresse != null ?
                new ObjectParameter("adresse", adresse) :
                new ObjectParameter("adresse", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var paysParameter = pays != null ?
                new ObjectParameter("pays", pays) :
                new ObjectParameter("pays", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("telephone", telephone) :
                new ObjectParameter("telephone", typeof(string));
    
            var villeParameter = ville != null ?
                new ObjectParameter("ville", ville) :
                new ObjectParameter("ville", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifierMarketer", codeParameter, adresseParameter, emailParameter, nomParameter, paysParameter, telephoneParameter, villeParameter, codeUParameter);
        }
    
        public virtual int modifierNavire(string code, Nullable<decimal> capacite, string nom, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var capaciteParameter = capacite.HasValue ?
                new ObjectParameter("capacite", capacite) :
                new ObjectParameter("capacite", typeof(decimal));
    
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifierNavire", codeParameter, capaciteParameter, nomParameter, codeUParameter);
        }
    
        public virtual int modifierPoint_consommation(string code, string adresse, string email, string localisation, string nom, string pays, string telephone, string ville, string codeCLIENT, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var adresseParameter = adresse != null ?
                new ObjectParameter("adresse", adresse) :
                new ObjectParameter("adresse", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var localisationParameter = localisation != null ?
                new ObjectParameter("localisation", localisation) :
                new ObjectParameter("localisation", typeof(string));
    
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var paysParameter = pays != null ?
                new ObjectParameter("pays", pays) :
                new ObjectParameter("pays", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("telephone", telephone) :
                new ObjectParameter("telephone", typeof(string));
    
            var villeParameter = ville != null ?
                new ObjectParameter("ville", ville) :
                new ObjectParameter("ville", typeof(string));
    
            var codeCLIENTParameter = codeCLIENT != null ?
                new ObjectParameter("codeCLIENT", codeCLIENT) :
                new ObjectParameter("codeCLIENT", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifierPoint_consommation", codeParameter, adresseParameter, emailParameter, localisationParameter, nomParameter, paysParameter, telephoneParameter, villeParameter, codeCLIENTParameter, codeUParameter);
        }
    
        public virtual int modifierPompe(string code, string libelle, string codeTANKER, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var libelleParameter = libelle != null ?
                new ObjectParameter("libelle", libelle) :
                new ObjectParameter("libelle", typeof(string));
    
            var codeTANKERParameter = codeTANKER != null ?
                new ObjectParameter("codeTANKER", codeTANKER) :
                new ObjectParameter("codeTANKER", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifierPompe", codeParameter, libelleParameter, codeTANKERParameter, codeUParameter);
        }
    
        public virtual int modifierPompiste(string code, string adresse, string email, string nom, string prenom, string telephone, string codeStation, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var adresseParameter = adresse != null ?
                new ObjectParameter("adresse", adresse) :
                new ObjectParameter("adresse", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var prenomParameter = prenom != null ?
                new ObjectParameter("prenom", prenom) :
                new ObjectParameter("prenom", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("telephone", telephone) :
                new ObjectParameter("telephone", typeof(string));
    
            var codeStationParameter = codeStation != null ?
                new ObjectParameter("codeStation", codeStation) :
                new ObjectParameter("codeStation", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifierPompiste", codeParameter, adresseParameter, emailParameter, nomParameter, prenomParameter, telephoneParameter, codeStationParameter, codeUParameter);
        }
    
        public virtual int modifierProduit(string code, string designation, string libelle, Nullable<decimal> prix, string unite_mesure, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var designationParameter = designation != null ?
                new ObjectParameter("designation", designation) :
                new ObjectParameter("designation", typeof(string));
    
            var libelleParameter = libelle != null ?
                new ObjectParameter("libelle", libelle) :
                new ObjectParameter("libelle", typeof(string));
    
            var prixParameter = prix.HasValue ?
                new ObjectParameter("prix", prix) :
                new ObjectParameter("prix", typeof(decimal));
    
            var unite_mesureParameter = unite_mesure != null ?
                new ObjectParameter("unite_mesure", unite_mesure) :
                new ObjectParameter("unite_mesure", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifierProduit", codeParameter, designationParameter, libelleParameter, prixParameter, unite_mesureParameter, codeUParameter);
        }
    
        public virtual int modifierReception(string code, Nullable<System.DateTime> date_reception, Nullable<decimal> quantite, string codeCOMMANDE_CLIENT, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var date_receptionParameter = date_reception.HasValue ?
                new ObjectParameter("date_reception", date_reception) :
                new ObjectParameter("date_reception", typeof(System.DateTime));
    
            var quantiteParameter = quantite.HasValue ?
                new ObjectParameter("quantite", quantite) :
                new ObjectParameter("quantite", typeof(decimal));
    
            var codeCOMMANDE_CLIENTParameter = codeCOMMANDE_CLIENT != null ?
                new ObjectParameter("codeCOMMANDE_CLIENT", codeCOMMANDE_CLIENT) :
                new ObjectParameter("codeCOMMANDE_CLIENT", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifierReception", codeParameter, date_receptionParameter, quantiteParameter, codeCOMMANDE_CLIENTParameter, codeUParameter);
        }
    
        public virtual int modifierReglement_dette(string code, Nullable<System.DateTime> date_paiement, string libelle, Nullable<decimal> montant, string codeDETTE, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var date_paiementParameter = date_paiement.HasValue ?
                new ObjectParameter("date_paiement", date_paiement) :
                new ObjectParameter("date_paiement", typeof(System.DateTime));
    
            var libelleParameter = libelle != null ?
                new ObjectParameter("libelle", libelle) :
                new ObjectParameter("libelle", typeof(string));
    
            var montantParameter = montant.HasValue ?
                new ObjectParameter("montant", montant) :
                new ObjectParameter("montant", typeof(decimal));
    
            var codeDETTEParameter = codeDETTE != null ?
                new ObjectParameter("codeDETTE", codeDETTE) :
                new ObjectParameter("codeDETTE", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifierReglement_dette", codeParameter, date_paiementParameter, libelleParameter, montantParameter, codeDETTEParameter, codeUParameter);
        }
    
        public virtual int modifierStation(string code, string adresse, string email, string localisation, string nom, string pays, string telephone, string ville, string codeMARKETER, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var adresseParameter = adresse != null ?
                new ObjectParameter("adresse", adresse) :
                new ObjectParameter("adresse", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var localisationParameter = localisation != null ?
                new ObjectParameter("localisation", localisation) :
                new ObjectParameter("localisation", typeof(string));
    
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var paysParameter = pays != null ?
                new ObjectParameter("pays", pays) :
                new ObjectParameter("pays", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("telephone", telephone) :
                new ObjectParameter("telephone", typeof(string));
    
            var villeParameter = ville != null ?
                new ObjectParameter("ville", ville) :
                new ObjectParameter("ville", typeof(string));
    
            var codeMARKETERParameter = codeMARKETER != null ?
                new ObjectParameter("codeMARKETER", codeMARKETER) :
                new ObjectParameter("codeMARKETER", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifierStation", codeParameter, adresseParameter, emailParameter, localisationParameter, nomParameter, paysParameter, telephoneParameter, villeParameter, codeMARKETERParameter, codeUParameter);
        }
    
        public virtual int modifierStock(string code, Nullable<decimal> quantite, string codeStation, string codePRODUIT, string libelle, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var quantiteParameter = quantite.HasValue ?
                new ObjectParameter("quantite", quantite) :
                new ObjectParameter("quantite", typeof(decimal));
    
            var codeStationParameter = codeStation != null ?
                new ObjectParameter("codeStation", codeStation) :
                new ObjectParameter("codeStation", typeof(string));
    
            var codePRODUITParameter = codePRODUIT != null ?
                new ObjectParameter("codePRODUIT", codePRODUIT) :
                new ObjectParameter("codePRODUIT", typeof(string));
    
            var libelleParameter = libelle != null ?
                new ObjectParameter("libelle", libelle) :
                new ObjectParameter("libelle", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifierStock", codeParameter, quantiteParameter, codeStationParameter, codePRODUITParameter, libelleParameter, codeUParameter);
        }
    
        public virtual int modifierTanker(string code, Nullable<decimal> quantite, string codePRODUIT, string codeStation, string libelle, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var quantiteParameter = quantite.HasValue ?
                new ObjectParameter("quantite", quantite) :
                new ObjectParameter("quantite", typeof(decimal));
    
            var codePRODUITParameter = codePRODUIT != null ?
                new ObjectParameter("codePRODUIT", codePRODUIT) :
                new ObjectParameter("codePRODUIT", typeof(string));
    
            var codeStationParameter = codeStation != null ?
                new ObjectParameter("codeStation", codeStation) :
                new ObjectParameter("codeStation", typeof(string));
    
            var libelleParameter = libelle != null ?
                new ObjectParameter("libelle", libelle) :
                new ObjectParameter("libelle", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifierTanker", codeParameter, quantiteParameter, codePRODUITParameter, codeStationParameter, libelleParameter, codeUParameter);
        }
    
        public virtual int modifierTaxe(string code, string libelle, Nullable<decimal> taux, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var libelleParameter = libelle != null ?
                new ObjectParameter("libelle", libelle) :
                new ObjectParameter("libelle", typeof(string));
    
            var tauxParameter = taux.HasValue ?
                new ObjectParameter("taux", taux) :
                new ObjectParameter("taux", typeof(decimal));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifierTaxe", codeParameter, libelleParameter, tauxParameter, codeUParameter);
        }
    
        public virtual int modifierTranche(string code, Nullable<System.DateTime> date_paiement, string libelle, Nullable<decimal> montant, string codeFACTURATION, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var date_paiementParameter = date_paiement.HasValue ?
                new ObjectParameter("date_paiement", date_paiement) :
                new ObjectParameter("date_paiement", typeof(System.DateTime));
    
            var libelleParameter = libelle != null ?
                new ObjectParameter("libelle", libelle) :
                new ObjectParameter("libelle", typeof(string));
    
            var montantParameter = montant.HasValue ?
                new ObjectParameter("montant", montant) :
                new ObjectParameter("montant", typeof(decimal));
    
            var codeFACTURATIONParameter = codeFACTURATION != null ?
                new ObjectParameter("codeFACTURATION", codeFACTURATION) :
                new ObjectParameter("codeFACTURATION", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifierTranche", codeParameter, date_paiementParameter, libelleParameter, montantParameter, codeFACTURATIONParameter, codeUParameter);
        }
    
        public virtual int modifierTranche_Marketer(string code, Nullable<System.DateTime> date_paiement, string libelle, Nullable<decimal> montant, string codeFACTURATION_MARKETER, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var date_paiementParameter = date_paiement.HasValue ?
                new ObjectParameter("date_paiement", date_paiement) :
                new ObjectParameter("date_paiement", typeof(System.DateTime));
    
            var libelleParameter = libelle != null ?
                new ObjectParameter("libelle", libelle) :
                new ObjectParameter("libelle", typeof(string));
    
            var montantParameter = montant.HasValue ?
                new ObjectParameter("montant", montant) :
                new ObjectParameter("montant", typeof(decimal));
    
            var codeFACTURATION_MARKETERParameter = codeFACTURATION_MARKETER != null ?
                new ObjectParameter("codeFACTURATION_MARKETER", codeFACTURATION_MARKETER) :
                new ObjectParameter("codeFACTURATION_MARKETER", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifierTranche_Marketer", codeParameter, date_paiementParameter, libelleParameter, montantParameter, codeFACTURATION_MARKETERParameter, codeUParameter);
        }
    
        public virtual int modifierTransaction_effectuee(string code, Nullable<System.DateTime> date_transaction, string libelle, Nullable<decimal> montant_transaction, string codeCOMPTE_MARKETER, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var date_transactionParameter = date_transaction.HasValue ?
                new ObjectParameter("date_transaction", date_transaction) :
                new ObjectParameter("date_transaction", typeof(System.DateTime));
    
            var libelleParameter = libelle != null ?
                new ObjectParameter("libelle", libelle) :
                new ObjectParameter("libelle", typeof(string));
    
            var montant_transactionParameter = montant_transaction.HasValue ?
                new ObjectParameter("montant_transaction", montant_transaction) :
                new ObjectParameter("montant_transaction", typeof(decimal));
    
            var codeCOMPTE_MARKETERParameter = codeCOMPTE_MARKETER != null ?
                new ObjectParameter("codeCOMPTE_MARKETER", codeCOMPTE_MARKETER) :
                new ObjectParameter("codeCOMPTE_MARKETER", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifierTransaction_effectuee", codeParameter, date_transactionParameter, libelleParameter, montant_transactionParameter, codeCOMPTE_MARKETERParameter, codeUParameter);
        }
    
        public virtual int modifierTransporteur(string code, string email, string localisation, string nom, string pays, string telephone, string ville, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var localisationParameter = localisation != null ?
                new ObjectParameter("localisation", localisation) :
                new ObjectParameter("localisation", typeof(string));
    
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var paysParameter = pays != null ?
                new ObjectParameter("pays", pays) :
                new ObjectParameter("pays", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("telephone", telephone) :
                new ObjectParameter("telephone", typeof(string));
    
            var villeParameter = ville != null ?
                new ObjectParameter("ville", ville) :
                new ObjectParameter("ville", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifierTransporteur", codeParameter, emailParameter, localisationParameter, nomParameter, paysParameter, telephoneParameter, villeParameter, codeUParameter);
        }
    
        public virtual int modifierUtilisateur(string code, string email, string nom, string prenom, string telephone, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var prenomParameter = prenom != null ?
                new ObjectParameter("prenom", prenom) :
                new ObjectParameter("prenom", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("telephone", telephone) :
                new ObjectParameter("telephone", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifierUtilisateur", codeParameter, emailParameter, nomParameter, prenomParameter, telephoneParameter, codeUParameter);
        }
    
        public virtual int modifierVente_carburant(string code, Nullable<int> compteur_apres, Nullable<int> compteur_avant, Nullable<System.DateTime> date_vente, Nullable<decimal> quantite, string codePOMPE, string codePOMPISTE, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var compteur_apresParameter = compteur_apres.HasValue ?
                new ObjectParameter("compteur_apres", compteur_apres) :
                new ObjectParameter("compteur_apres", typeof(int));
    
            var compteur_avantParameter = compteur_avant.HasValue ?
                new ObjectParameter("compteur_avant", compteur_avant) :
                new ObjectParameter("compteur_avant", typeof(int));
    
            var date_venteParameter = date_vente.HasValue ?
                new ObjectParameter("date_vente", date_vente) :
                new ObjectParameter("date_vente", typeof(System.DateTime));
    
            var quantiteParameter = quantite.HasValue ?
                new ObjectParameter("quantite", quantite) :
                new ObjectParameter("quantite", typeof(decimal));
    
            var codePOMPEParameter = codePOMPE != null ?
                new ObjectParameter("codePOMPE", codePOMPE) :
                new ObjectParameter("codePOMPE", typeof(string));
    
            var codePOMPISTEParameter = codePOMPISTE != null ?
                new ObjectParameter("codePOMPISTE", codePOMPISTE) :
                new ObjectParameter("codePOMPISTE", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifierVente_carburant", codeParameter, compteur_apresParameter, compteur_avantParameter, date_venteParameter, quantiteParameter, codePOMPEParameter, codePOMPISTEParameter, codeUParameter);
        }
    
        public virtual int supprimerAll_BC(string codeU)
        {
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerAll_BC", codeUParameter);
        }
    
        public virtual int supprimerAll_BE_bac_bac(string codeU)
        {
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerAll_BE_bac_bac", codeUParameter);
        }
    
        public virtual int supprimerBC(string code, string codeDEPOT, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var codeDEPOTParameter = codeDEPOT != null ?
                new ObjectParameter("codeDEPOT", codeDEPOT) :
                new ObjectParameter("codeDEPOT", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerBC", codeParameter, codeDEPOTParameter, codeUParameter);
        }
    
        public virtual int supprimerBE_bac_bac(string code, string codeCOMMANDE_MARKET, string codeDEPOT, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var codeCOMMANDE_MARKETParameter = codeCOMMANDE_MARKET != null ?
                new ObjectParameter("codeCOMMANDE_MARKET", codeCOMMANDE_MARKET) :
                new ObjectParameter("codeCOMMANDE_MARKET", typeof(string));
    
            var codeDEPOTParameter = codeDEPOT != null ?
                new ObjectParameter("codeDEPOT", codeDEPOT) :
                new ObjectParameter("codeDEPOT", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerBE_bac_bac", codeParameter, codeCOMMANDE_MARKETParameter, codeDEPOTParameter, codeUParameter);
        }
    
        public virtual int supprimerBE_export(string code, string codeDEPOT, string codeCOMMANDE_CLIENT, string codeTRANSPORTEUR, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var codeDEPOTParameter = codeDEPOT != null ?
                new ObjectParameter("codeDEPOT", codeDEPOT) :
                new ObjectParameter("codeDEPOT", typeof(string));
    
            var codeCOMMANDE_CLIENTParameter = codeCOMMANDE_CLIENT != null ?
                new ObjectParameter("codeCOMMANDE_CLIENT", codeCOMMANDE_CLIENT) :
                new ObjectParameter("codeCOMMANDE_CLIENT", typeof(string));
    
            var codeTRANSPORTEURParameter = codeTRANSPORTEUR != null ?
                new ObjectParameter("codeTRANSPORTEUR", codeTRANSPORTEUR) :
                new ObjectParameter("codeTRANSPORTEUR", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerBE_export", codeParameter, codeDEPOTParameter, codeCOMMANDE_CLIENTParameter, codeTRANSPORTEURParameter, codeUParameter);
        }
    
        public virtual int supprimerBE_livraison(string code, string codeCOMMANDE_CLIENT, string codeDEPOT, string codeTRANSPORTEUR, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var codeCOMMANDE_CLIENTParameter = codeCOMMANDE_CLIENT != null ?
                new ObjectParameter("codeCOMMANDE_CLIENT", codeCOMMANDE_CLIENT) :
                new ObjectParameter("codeCOMMANDE_CLIENT", typeof(string));
    
            var codeDEPOTParameter = codeDEPOT != null ?
                new ObjectParameter("codeDEPOT", codeDEPOT) :
                new ObjectParameter("codeDEPOT", typeof(string));
    
            var codeTRANSPORTEURParameter = codeTRANSPORTEUR != null ?
                new ObjectParameter("codeTRANSPORTEUR", codeTRANSPORTEUR) :
                new ObjectParameter("codeTRANSPORTEUR", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerBE_livraison", codeParameter, codeCOMMANDE_CLIENTParameter, codeDEPOTParameter, codeTRANSPORTEURParameter, codeUParameter);
        }
    
        public virtual int supprimerBE_soutage(string code, string codeCOMMANDE_CLIENT, string codeDEPOT, string codeTRANSPORTEUR, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var codeCOMMANDE_CLIENTParameter = codeCOMMANDE_CLIENT != null ?
                new ObjectParameter("codeCOMMANDE_CLIENT", codeCOMMANDE_CLIENT) :
                new ObjectParameter("codeCOMMANDE_CLIENT", typeof(string));
    
            var codeDEPOTParameter = codeDEPOT != null ?
                new ObjectParameter("codeDEPOT", codeDEPOT) :
                new ObjectParameter("codeDEPOT", typeof(string));
    
            var codeTRANSPORTEURParameter = codeTRANSPORTEUR != null ?
                new ObjectParameter("codeTRANSPORTEUR", codeTRANSPORTEUR) :
                new ObjectParameter("codeTRANSPORTEUR", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerBE_soutage", codeParameter, codeCOMMANDE_CLIENTParameter, codeDEPOTParameter, codeTRANSPORTEURParameter, codeUParameter);
        }
    
        public virtual int supprimerBE_TRANSFERT(string code, string codeMARKETER, string codeDEPOT, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var codeMARKETERParameter = codeMARKETER != null ?
                new ObjectParameter("codeMARKETER", codeMARKETER) :
                new ObjectParameter("codeMARKETER", typeof(string));
    
            var codeDEPOTParameter = codeDEPOT != null ?
                new ObjectParameter("codeDEPOT", codeDEPOT) :
                new ObjectParameter("codeDEPOT", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerBE_TRANSFERT", codeParameter, codeMARKETERParameter, codeDEPOTParameter, codeUParameter);
        }
    
        public virtual int supprimerClient(string code, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerClient", codeParameter, codeUParameter);
        }
    
        public virtual int supprimerCommande_client(string code, string codePOINT_CONSOMMATION, string codeMARKETER, string codePRODUIT, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var codePOINT_CONSOMMATIONParameter = codePOINT_CONSOMMATION != null ?
                new ObjectParameter("codePOINT_CONSOMMATION", codePOINT_CONSOMMATION) :
                new ObjectParameter("codePOINT_CONSOMMATION", typeof(string));
    
            var codeMARKETERParameter = codeMARKETER != null ?
                new ObjectParameter("codeMARKETER", codeMARKETER) :
                new ObjectParameter("codeMARKETER", typeof(string));
    
            var codePRODUITParameter = codePRODUIT != null ?
                new ObjectParameter("codePRODUIT", codePRODUIT) :
                new ObjectParameter("codePRODUIT", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerCommande_client", codeParameter, codePOINT_CONSOMMATIONParameter, codeMARKETERParameter, codePRODUITParameter, codeUParameter);
        }
    
        public virtual int supprimerCommande_marketer(string code, string codeMARKETER, string codeFOURNISSEUR, string codePRODUIT, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var codeMARKETERParameter = codeMARKETER != null ?
                new ObjectParameter("codeMARKETER", codeMARKETER) :
                new ObjectParameter("codeMARKETER", typeof(string));
    
            var codeFOURNISSEURParameter = codeFOURNISSEUR != null ?
                new ObjectParameter("codeFOURNISSEUR", codeFOURNISSEUR) :
                new ObjectParameter("codeFOURNISSEUR", typeof(string));
    
            var codePRODUITParameter = codePRODUIT != null ?
                new ObjectParameter("codePRODUIT", codePRODUIT) :
                new ObjectParameter("codePRODUIT", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerCommande_marketer", codeParameter, codeMARKETERParameter, codeFOURNISSEURParameter, codePRODUITParameter, codeUParameter);
        }
    
        public virtual int supprimerCompte_marketer(string code, string codeMark, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var codeMarkParameter = codeMark != null ?
                new ObjectParameter("codeMark", codeMark) :
                new ObjectParameter("codeMark", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerCompte_marketer", codeParameter, codeMarkParameter, codeUParameter);
        }
    
        public virtual int supprimerCompte_utilisateur(string code, string codeUtilisateur, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var codeUtilisateurParameter = codeUtilisateur != null ?
                new ObjectParameter("codeUtilisateur", codeUtilisateur) :
                new ObjectParameter("codeUtilisateur", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerCompte_utilisateur", codeParameter, codeUtilisateurParameter, codeUParameter);
        }
    
        public virtual int supprimerDepot(string code, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerDepot", codeParameter, codeUParameter);
        }
    
        public virtual int supprimerDette(string code, string codeCLIENT, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var codeCLIENTParameter = codeCLIENT != null ?
                new ObjectParameter("codeCLIENT", codeCLIENT) :
                new ObjectParameter("codeCLIENT", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerDette", codeParameter, codeCLIENTParameter, codeUParameter);
        }
    
        public virtual int supprimerFacturation_Client(string code, Nullable<decimal> montant_paye, string codeCOMMANDE_CLIENT, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var montant_payeParameter = montant_paye.HasValue ?
                new ObjectParameter("montant_paye", montant_paye) :
                new ObjectParameter("montant_paye", typeof(decimal));
    
            var codeCOMMANDE_CLIENTParameter = codeCOMMANDE_CLIENT != null ?
                new ObjectParameter("codeCOMMANDE_CLIENT", codeCOMMANDE_CLIENT) :
                new ObjectParameter("codeCOMMANDE_CLIENT", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerFacturation_Client", codeParameter, montant_payeParameter, codeCOMMANDE_CLIENTParameter, codeUParameter);
        }
    
        public virtual int supprimerFacturationMarketer(string code, string codeCOMMANDE_MARKETER, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var codeCOMMANDE_MARKETERParameter = codeCOMMANDE_MARKETER != null ?
                new ObjectParameter("codeCOMMANDE_MARKETER", codeCOMMANDE_MARKETER) :
                new ObjectParameter("codeCOMMANDE_MARKETER", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerFacturationMarketer", codeParameter, codeCOMMANDE_MARKETERParameter, codeUParameter);
        }
    
        public virtual int supprimerFournisseur(string code, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerFournisseur", codeParameter, codeUParameter);
        }
    
        public virtual int supprimerHistorique(string code, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerHistorique", codeParameter, codeUParameter);
        }
    
        public virtual int supprimerJoinBE_SoutageToNavire(string codeNAVIRE, string codeBE_SOUTAGE, string codeU)
        {
            var codeNAVIREParameter = codeNAVIRE != null ?
                new ObjectParameter("codeNAVIRE", codeNAVIRE) :
                new ObjectParameter("codeNAVIRE", typeof(string));
    
            var codeBE_SOUTAGEParameter = codeBE_SOUTAGE != null ?
                new ObjectParameter("codeBE_SOUTAGE", codeBE_SOUTAGE) :
                new ObjectParameter("codeBE_SOUTAGE", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerJoinBE_SoutageToNavire", codeNAVIREParameter, codeBE_SOUTAGEParameter, codeUParameter);
        }
    
        public virtual int supprimerJoinDetteToProduit(string codePRODUIT, string codeDETTE, string codeU)
        {
            var codePRODUITParameter = codePRODUIT != null ?
                new ObjectParameter("codePRODUIT", codePRODUIT) :
                new ObjectParameter("codePRODUIT", typeof(string));
    
            var codeDETTEParameter = codeDETTE != null ?
                new ObjectParameter("codeDETTE", codeDETTE) :
                new ObjectParameter("codeDETTE", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerJoinDetteToProduit", codePRODUITParameter, codeDETTEParameter, codeUParameter);
        }
    
        public virtual int supprimerJoinProduitToCommande_client(string codeCOMMANDE_CLIENT, string codeProduit, string codeU)
        {
            var codeCOMMANDE_CLIENTParameter = codeCOMMANDE_CLIENT != null ?
                new ObjectParameter("codeCOMMANDE_CLIENT", codeCOMMANDE_CLIENT) :
                new ObjectParameter("codeCOMMANDE_CLIENT", typeof(string));
    
            var codeProduitParameter = codeProduit != null ?
                new ObjectParameter("codeProduit", codeProduit) :
                new ObjectParameter("codeProduit", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerJoinProduitToCommande_client", codeCOMMANDE_CLIENTParameter, codeProduitParameter, codeUParameter);
        }
    
        public virtual int supprimerJoinTaxeToFacturation(string codeFACTURATION, string codeTAXE, string codeU)
        {
            var codeFACTURATIONParameter = codeFACTURATION != null ?
                new ObjectParameter("codeFACTURATION", codeFACTURATION) :
                new ObjectParameter("codeFACTURATION", typeof(string));
    
            var codeTAXEParameter = codeTAXE != null ?
                new ObjectParameter("codeTAXE", codeTAXE) :
                new ObjectParameter("codeTAXE", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerJoinTaxeToFacturation", codeFACTURATIONParameter, codeTAXEParameter, codeUParameter);
        }
    
        public virtual int supprimerMarketer(string code, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerMarketer", codeParameter, codeUParameter);
        }
    
        public virtual int supprimerNavire(string code, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerNavire", codeParameter, codeUParameter);
        }
    
        public virtual int supprimerPoint_consommation(string code, string codeCLIENT, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var codeCLIENTParameter = codeCLIENT != null ?
                new ObjectParameter("codeCLIENT", codeCLIENT) :
                new ObjectParameter("codeCLIENT", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerPoint_consommation", codeParameter, codeCLIENTParameter, codeUParameter);
        }
    
        public virtual int supprimerPompe(string code, string codeTANKER, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var codeTANKERParameter = codeTANKER != null ?
                new ObjectParameter("codeTANKER", codeTANKER) :
                new ObjectParameter("codeTANKER", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerPompe", codeParameter, codeTANKERParameter, codeUParameter);
        }
    
        public virtual int supprimerPompiste(string code, string codeStation, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var codeStationParameter = codeStation != null ?
                new ObjectParameter("codeStation", codeStation) :
                new ObjectParameter("codeStation", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerPompiste", codeParameter, codeStationParameter, codeUParameter);
        }
    
        public virtual int supprimerProduit(string code, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerProduit", codeParameter, codeUParameter);
        }
    
        public virtual int supprimerReception(string code, string codeCOMMANDE_CLIENT, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var codeCOMMANDE_CLIENTParameter = codeCOMMANDE_CLIENT != null ?
                new ObjectParameter("codeCOMMANDE_CLIENT", codeCOMMANDE_CLIENT) :
                new ObjectParameter("codeCOMMANDE_CLIENT", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerReception", codeParameter, codeCOMMANDE_CLIENTParameter, codeUParameter);
        }
    
        public virtual int supprimerReglement_dette(string code, string codeDETTE, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var codeDETTEParameter = codeDETTE != null ?
                new ObjectParameter("codeDETTE", codeDETTE) :
                new ObjectParameter("codeDETTE", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerReglement_dette", codeParameter, codeDETTEParameter, codeUParameter);
        }
    
        public virtual int supprimerStation(string code, string codeMARKETER, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var codeMARKETERParameter = codeMARKETER != null ?
                new ObjectParameter("codeMARKETER", codeMARKETER) :
                new ObjectParameter("codeMARKETER", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerStation", codeParameter, codeMARKETERParameter, codeUParameter);
        }
    
        public virtual int supprimerStock(string code, string codeStation, string codePRODUIT, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var codeStationParameter = codeStation != null ?
                new ObjectParameter("codeStation", codeStation) :
                new ObjectParameter("codeStation", typeof(string));
    
            var codePRODUITParameter = codePRODUIT != null ?
                new ObjectParameter("codePRODUIT", codePRODUIT) :
                new ObjectParameter("codePRODUIT", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerStock", codeParameter, codeStationParameter, codePRODUITParameter, codeUParameter);
        }
    
        public virtual int supprimerTanker(string code, string codePRODUIT, string codeStation, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var codePRODUITParameter = codePRODUIT != null ?
                new ObjectParameter("codePRODUIT", codePRODUIT) :
                new ObjectParameter("codePRODUIT", typeof(string));
    
            var codeStationParameter = codeStation != null ?
                new ObjectParameter("codeStation", codeStation) :
                new ObjectParameter("codeStation", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerTanker", codeParameter, codePRODUITParameter, codeStationParameter, codeUParameter);
        }
    
        public virtual int supprimerTaxe(string code, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerTaxe", codeParameter, codeUParameter);
        }
    
        public virtual int supprimerTranche(string code, string codeFACTURATION, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var codeFACTURATIONParameter = codeFACTURATION != null ?
                new ObjectParameter("codeFACTURATION", codeFACTURATION) :
                new ObjectParameter("codeFACTURATION", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerTranche", codeParameter, codeFACTURATIONParameter, codeUParameter);
        }
    
        public virtual int supprimerTranche_Marketer(string code, string codeFACTURATION_MARKETER, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var codeFACTURATION_MARKETERParameter = codeFACTURATION_MARKETER != null ?
                new ObjectParameter("codeFACTURATION_MARKETER", codeFACTURATION_MARKETER) :
                new ObjectParameter("codeFACTURATION_MARKETER", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerTranche_Marketer", codeParameter, codeFACTURATION_MARKETERParameter, codeUParameter);
        }
    
        public virtual int supprimerTransaction_effectuee(string code, string codeCOMPTE_MARKETER, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var codeCOMPTE_MARKETERParameter = codeCOMPTE_MARKETER != null ?
                new ObjectParameter("codeCOMPTE_MARKETER", codeCOMPTE_MARKETER) :
                new ObjectParameter("codeCOMPTE_MARKETER", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerTransaction_effectuee", codeParameter, codeCOMPTE_MARKETERParameter, codeUParameter);
        }
    
        public virtual int supprimerTransporteur(string code, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerTransporteur", codeParameter, codeUParameter);
        }
    
        public virtual int supprimerUtilisateur(string code, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerUtilisateur", codeParameter, codeUParameter);
        }
    
        public virtual int supprimerVente_carburant(string code, string codePOMPE, string codePOMPISTE, string codeU)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var codePOMPEParameter = codePOMPE != null ?
                new ObjectParameter("codePOMPE", codePOMPE) :
                new ObjectParameter("codePOMPE", typeof(string));
    
            var codePOMPISTEParameter = codePOMPISTE != null ?
                new ObjectParameter("codePOMPISTE", codePOMPISTE) :
                new ObjectParameter("codePOMPISTE", typeof(string));
    
            var codeUParameter = codeU != null ?
                new ObjectParameter("codeU", codeU) :
                new ObjectParameter("codeU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supprimerVente_carburant", codeParameter, codePOMPEParameter, codePOMPISTEParameter, codeUParameter);
        }
    }
}
